# ============================================================
# üß© DOCKERFILE PARA NEXT.JS (DESENVOLVIMENTO)
# ============================================================

FROM node:22-alpine AS dev

# Cria Diret√≥rio de trabalho dentro do container
WORKDIR /app

# Depend√™ncia necess√°ria para o Sharp e Next.js
RUN apk add --no-cache libc6-compat

# Copia apenas os manifests de depend√™ncias, arquivos essenciais para instalar depend√™ncias
COPY package*.json ./

# Instala depend√™ncias
RUN npm ci

# Copia o restante do c√≥digo do projeto
COPY . .

# Define vari√°veis padr√£o
ENV NODE_ENV=development
ENV NEXT_TELEMETRY_DISABLED=1
ENV WATCHPACK_POLLING=true
ENV CHOKIDAR_USEPOLLING=1

# Exp√µe a porta padr√£o do Next.js
EXPOSE 3000

# Comando padr√£o
CMD ["npm", "run", "dev"]

# =====================================================================
# üèóÔ∏è ETAPA 2 ‚Äî Build de Produ√ß√£o
# =====================================================================
FROM node:22-alpine AS build

WORKDIR /app
COPY package*.json ./
RUN npm install --legacy-peer-deps
COPY . .

# Compila o projeto Next.js (gera .next/)
RUN npm run build


# =====================================================================
# üöÄ ETAPA 3 ‚Äî Container final (imagem leve de produ√ß√£o)
# =====================================================================
FROM node:22-alpine AS production

WORKDIR /app

# Copia apenas o build e depend√™ncias de produ√ß√£o
COPY --from=build /app/package*.json ./
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/.next ./.next
COPY --from=build /app/public ./public
COPY --from=build /app/next.config.* ./
COPY --from=build /app/tailwind.config.* ./
COPY --from=build /app/postcss.config.* ./
COPY --from=build /app/messages ./messages

# Define vari√°veis de ambiente
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000

# Exp√µe a porta
EXPOSE 3000

# Inicia o servidor Next.js
CMD ["npm", "run", "start"]
